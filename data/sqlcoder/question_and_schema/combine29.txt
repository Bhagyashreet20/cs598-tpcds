Reproduce a list of items that were sold in stores during the month of April in 1999, and subsequently returned within the following six months of the same year. Furthermore, these returned items were re-purchased by the returning customer through the catalog sales channel in the next three years. Calculate the average quantity of these items sold in the stores, the average quantity returned, and the average quantity purchased through the catalog channel. Organize this data by item and store, and then sort the results in ascending order based on the item ID, item description, store ID, and store name. Finally, retrieve the first 100 records from the sorted list.

CREATE TABLE store_sales (  ss_sold_date_sk,  ss_sold_time_sk,  ss_item_sk,  ss_customer_sk,  ss_cdemo_sk,  ss_hdemo_sk,  ss_addr_sk,  ss_store_sk,  ss_promo_sk,  ss_ticket_number,  ss_quantity,  ss_wholesale_cost,  ss_list_price,  ss_sales_price,  ss_ext_discount_amt,  ss_ext_sales_price,  ss_ext_wholesale_cost,  ss_ext_list_price,  ss_ext_tax,  ss_coupon_amt,  ss_net_paid,  ss_net_paid_inc_tax,  ss_net_profit );

CREATE TABLE store_returns (  sr_returned_date_sk,  sr_return_time_sk,  sr_item_sk,  sr_customer_sk,  sr_cdemo_sk,  sr_hdemo_sk,  sr_addr_sk,  sr_store_sk,  sr_reason_sk,  sr_ticket_number,  sr_return_quantity,  sr_return_amt,  sr_return_tax,  sr_return_amt_inc_tax,  sr_fee,  sr_return_ship_cost,  sr_refunded_cash,  sr_reversed_charge,  sr_store_credit,  sr_net_loss );

CREATE TABLE catalog_sales (  cs_sold_date_sk,  cs_sold_time_sk,  cs_ship_date_sk,  cs_bill_customer_sk,  cs_bill_cdemo_sk,  cs_bill_hdemo_sk,  cs_bill_addr_sk,  cs_ship_customer_sk,  cs_ship_cdemo_sk,  cs_ship_hdemo_sk,  cs_ship_addr_sk,  cs_call_center_sk,  cs_catalog_page_sk,  cs_ship_mode_sk,  cs_warehouse_sk,  cs_item_sk,  cs_promo_sk,  cs_order_number,  cs_quantity,  cs_wholesale_cost,  cs_list_price,  cs_sales_price,  cs_ext_discount_amt,  cs_ext_sales_price,  cs_ext_wholesale_cost,  cs_ext_list_price,  cs_ext_tax,  cs_coupon_amt,  cs_ext_ship_cost,  cs_net_paid,  cs_net_paid_inc_tax,  cs_net_paid_inc_ship,  cs_net_paid_inc_ship_tax,  cs_net_profit );

CREATE TABLE date_dim (  d_date_sk,  d_date_id,  d_date,  d_month_seq,  d_week_seq,  d_quarter_seq,  d_year,  d_dow,  d_moy,  d_dom,  d_qoy,  d_fy_year,  d_fy_quarter_seq,  d_fy_week_seq,  d_day_name,  d_quarter_name,  d_holiday,  d_weekend,  d_following_holiday,  d_first_dom,  d_last_dom,  d_same_day_ly,  d_same_day_lq,  d_current_day,  d_current_week,  d_current_month,  d_current_quarter,  d_current_year );

CREATE TABLE store (  s_store_sk,  s_store_id,  s_rec_start_date,  s_rec_end_date,  s_closed_date_sk,  s_store_name,  s_number_employees,  s_floor_space,  s_hours,  s_manager,  s_market_id,  s_geography_class,  s_market_desc,  s_market_manager,  s_division_id,  s_division_name,  s_company_id,  s_company_name,  s_street_number,  s_street_name,  s_street_type,  s_suite_number,  s_city,  s_county,  s_state,  s_zip,  s_country,  s_gmt_offset,  s_tax_percentage );

CREATE TABLE item (  i_item_sk,  i_item_id,  i_rec_start_date,  i_rec_end_date,  i_item_desc,  i_current_price,  i_wholesale_cost,  i_brand_id,  i_brand,  i_class_id,  i_class,  i_category_id,  i_category,  i_manufact_id,  i_manufact,  i_size,  i_formulation,  i_color,  i_units,  i_container,  i_manager_id,  i_product_name );