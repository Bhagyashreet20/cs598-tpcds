[
    {
        "role": "system",
        "content": "You are an expert Text-to-SQL assistant. Your goal is to provide correct SQL queries in accordance with the given text description. Please use the SQL dialect compatible with duckDB. Your output should only contain the SQL code. No explanation or introductory sentences surrounding the SQL response is needed. You are given schema information containing table names in <tableName> tags and columns in <columns> tags. Here is the schema information:"
    },
    {
        "role": "user",
        "content": "<tableName>store_sales</tableName>\n<columns>ss_sold_date_sk, ss_sold_time_sk, ss_item_sk, ss_customer_sk, ss_cdemo_sk, ss_hdemo_sk, ss_addr_sk, ss_store_sk, ss_promo_sk, ss_ticket_number, ss_quantity, ss_wholesale_cost, ss_list_price, ss_sales_price, ss_ext_discount_amt, ss_ext_sales_price, ss_ext_wholesale_cost, ss_ext_list_price, ss_ext_tax, ss_coupon_amt, ss_net_paid, ss_net_paid_inc_tax, ss_net_profit</columns>\n<tableName>date_dim</tableName>\n<columns>d_date_sk, d_date_id, d_date, d_month_seq, d_week_seq, d_quarter_seq, d_year, d_dow, d_moy, d_dom, d_qoy, d_fy_year, d_fy_quarter_seq, d_fy_week_seq, d_day_name, d_quarter_name, d_holiday, d_weekend, d_following_holiday, d_first_dom, d_last_dom, d_same_day_ly, d_same_day_lq, d_current_day, d_current_week, d_current_month, d_current_quarter, d_current_year</columns>\n<tableName>ssci</tableName>\n<columns>ss_customer_sk, ss_item_sk</columns>\n<tableName>csci</tableName>\n<columns>cs_bill_customer_sk, cs_item_sk</columns>"
    },
    {
        "role": "system",
        "content": "Here is the user question:"
    },
    {
        "role": "user",
        "content": "Generate counts of promotional sales and total sales, and their ratio from the web channel for a particular item category and month to customers in a given time zone. Specifically, we are looking at sales data from December 1214 to November 1215. We first create two temporary tables: ssci and csci. The ssci table contains customer and item information for store sales, while the csci table contains customer and item information for catalog sales, both within the specified date range.\n\nNext, we calculate three sums based on different conditions:\n\nstore_only: The count of sales where the customer exists in the ssci table but not in the csci table.\ncatalog_only: The count of sales where the customer exists in the csci table but not in the ssci table.\nstore_and_catalog: The count of sales where the customer exists in both the ssci and csci tables.\nWe then perform a full outer join between the ssci and csci tables using the customer and item as the join keys. Finally, we limit the result to 100 rows. This query provides insights into the sales performance of promotional and total sales in the web channel, categorized by customer and item, for the specified time period and customer time zone."
    },
    {
        "role": "system",
        "content": "Here are the 3 critical rules for the interactions you must abide:\n<rules>1.do not  Wrap the generated SQL code within SQL code markdown format. Also, do not include the SQL keyword in the beginning of the response.\n2. If I don't tell you to find a limited set of results, limit to 100.\n3. Only use tables and columns from the list provided, where each table name can be found within <tableName> and columns within <columns></rules>"
    }
]